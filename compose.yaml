version: "3.9"

networks:
  default:
    name: test-network

services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8.1
    expose:
      - 2181

  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.2
    container_name: schema-registry
    expose:
      - 8081
    ports:
      - '9091:8081'
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_DEBUG: true

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.2.3
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ENABLE_KRAFT: no
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LOG_RETENTION_HOURS: 24
      KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS: 600000
      KAFKA_CFG_SCHEMA_REGISTRY_URL: schema-registry:8081
    expose:
      - 9094
      - 9092
    ports:
      - "9094:9094"
    depends_on:
      - zookeeper
      - schema-registry

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8888:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
  tqt:
    depends_on:
      - kafka
    container_name: tqt
    image: tqt
    environment:
      KAFKA_SERVER_URL: kafka:9092
      SCHEMA_REGISTRY_URL: schema-registry:8081
    ports:
      - "8081:8080"